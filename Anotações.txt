#C#
	-criador Anders Hjeberg

#Visual Studio
	-é um pack com várias linguagens
	-pode rodar várias linguagens em um run-time (CLR)
	-converte as linguagens em uma só 
	-evoului bastante, era exclusivo do windoes, ganhou versão MAC

#.NET
	-fortemente ligado a microsoft e C#
	-Lançado em 2000
	-Tonha o framework e o core, mas a microsoft decidiu juntar
e lançar o .NET 5

#.NET o que é, como e onde usar
	-é uma IDE criada pela microsoft
	-é desenvolvida e roda em .NET core, .NET Framework e Mono
	-isso é possível com uma biblioteca em comum (STAMDARD LIBRARY), garante as mesmas funcionalidades
	-Cada um com um Run-time:
		-.NET Cora: coreCLR
		-.Net Framework: CLR
		-Mono: Monoruntime
	-Usa 3 linguagens: C# (principal), F# e VB (essa é mais para estudo)
	-A microsoft quer estar em todos os lugares, cloud, web, desktop, Iot, AI...
	-Várias empresas usam, stackoverflowe e microsoft são exemplos
	-o visual studio (não code) foi feito pensando em .net, assim ele possui uma interface voltada para isso

#Dicas
	-no cmd e na psta onde está o .net: "dotnet new console -n nome" cria uma apliação de console
	-"dotnet restore" verifica os pacotes ligados ao projeto e baixa eles

#Conceitos orgacionais em C#
	-programas: arquvis de extensão .cs, declaram tipos
	-namespaces
	-tipos: classes, interfaces
	-menbros: campos, métodos, propriedades, eventos
	-assembles: o código compilado

#Structs
	-São parecidas com as classes, mas ao invés de serem por referância
elas são por valor
	-Não preceisam de alocação de heap
	-Não aceitam herança feitas pelo desenvolvedor, melhor ser usada em coisas
menores, sistema de cordenadas por exemplo
	-Ideal para usar menos memória
	-cria igual a classe, mas ao invés de "public class exem" fica "public struct exem"

#Interfaces
	-São "contratos", tanto classes e structs podem implementar
	-pode ter propriedades, métodos...
	-ela não tem implementações, apenas assinaturas
	-permitem herança múltipla

#Enums
	-é um tipo de valor distinto com um conjunto de cosntantes nomeados
	-exemplo: status de uma nota fiscal(emitido, cancelado, fianlizado) cada
um com um valor:1,2,3. Podemos usar os núemros, mas o melhor é dar um significado
para cada número. 1 = emitido, 2 = cancelado...
	-pode definir outros valores para representar os estados, como char, byte...
por padrão é int
	